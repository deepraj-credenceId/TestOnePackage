// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios16.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name C_Identity_Utils_Swift
import CIdentitySwift
@_exported import C_Identity_Utils_Swift
import CoreBluetooth
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol UtilsManagerDelegate : AnyObject {
  func didRecivedError(credenceError: CIdentitySwift.CredenceError)
  func didReceivedMdlResponse(mdlDataModel: CIdentitySwift.MDLDataModel, credenceError: CIdentitySwift.CredenceError)
}
@_hasMissingDesignatedInitializers public class UtilsSDKManager {
  public static let shared: C_Identity_Utils_Swift.UtilsSDKManager
  public var delegate: (any C_Identity_Utils_Swift.UtilsManagerDelegate)?
  public func testQRCode(qrCode: Swift.String, readerCertificate: Foundation.Data, readerCertificatePrivateKey: Foundation.Data, issuerCertificates: [Foundation.Data], selectedDataIdentifier: [CIdentitySwift.DataIdentifier])
  public func testNFC(readerCertificate: Foundation.Data, readerCertificatePrivateKey: Foundation.Data, issuerCertificates: [Foundation.Data], selectedDataIdentifier: [CIdentitySwift.DataIdentifier])
  @objc deinit
}
extension C_Identity_Utils_Swift.UtilsSDKManager : CIdentitySwift.SDKManagerDelegate {
  public func didReceivedMdlResponse(mdlDataModel: CIdentitySwift.MDLDataModel, credenceError: CIdentitySwift.CredenceError)
  public func didRecivedError(credenceError: CIdentitySwift.CredenceError)
  public func didReceivedMdlRequest(mdlRequest: Foundation.Data, bleConfiguration: CIdentitySwift.BLEConfiguration)
}
